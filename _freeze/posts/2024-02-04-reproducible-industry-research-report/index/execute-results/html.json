{
  "hash": "c62d1ddd964f2f8992ce501473c985d4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"可复现行业研究数据源 lixingr\"\ndescription: |\n  从人手中拿走机器能做的，剩下的则是人之为人的灵明。\nauthor: \"谭 长德\"\ndate: 2024-02-04\nimage: \"image/gabriel-sollmann-Y7d265_7i08-unsplash.jpg\"\nnumber-sections: true\ncategories: [\"脚手架\"]\nknitr:\n  opts_chunk: \n    echo: true\n    message: FALSE\n    warning: FALSE\n    cache: TRUE\n    collapse: true\n    comment: \"#>\" \n    R.options:\n      knitr.graphics.auto_pdf: true\n---\n\n\n![](image/gabriel-sollmann-Y7d265_7i08-unsplash.jpg)\n\n## 初心动机\n\n从人手中拿走机器能做的，剩下的则是人之为人的灵明。所以，一切可以自动化的都应当自动化。但案头研究工作，充斥着拖拉点拽复制粘贴。因为对办公软件而言，使用方式越直观，上手越快，越能吸引用户。但要享受内容创作，就得让创作的归创作，机械的归机械。我们可以借鉴“[文学化编程](https://yihui.org/cn/2014/01/literate-programming/)”，将“可复现科学研究”应用于“可复现行业研究”。\n\n一花开三叶，“可复现研究”脱胎于编程，因此可以套用编程领域最佳实践。如版本控制、代码复用。无需担心学习时间成本，借助大语言模型，连滚带爬用起来一周足矣。\n\n“可复现研究”让你在一份文档中，混排文字与代码，文档将嵌入代码生成的内容。借助代码，整洁数据任君差遣，而不必从头整理。数据处理、图表绘制也有迹可循。代码也是一种文本，外显研究过程均以文本记录，杜绝了交互操作。这意味着，任何人拿到项目文本，都可以重新生成同样的报告。使用版本控制工具，还可以记录版本，识别任何版本间的改动。修改迭代再也不必瞻前顾后。\n\n结合 Quarto，我们甚至可以做到“一处写就，多处成就”，即同一个文件输出多种格式文件。这样一来，你只需专心创作内容，而不必分心散力于机械重复事务。\n\n综合数据质量与使用成本，我将[理杏仁数据接口](https://www.lixinger.com/open/api/doc)封装成了 R 程序包：[lixingr](https://github.com/tanchangde/lixingr)。目前已完成中国大陆与中国香港公司接口封装，期待你试用，反馈，共同完善。\n\n## 先睹为快\n\n利用 lixingr 包调用理杏仁接口，按年查询 2018 年以来顺丰速运 PE TTM。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lixingr)\n\nlxr_query(\n  endpoint = lxr_cn_company_fs_non_financial(),\n  start_date = \"2018-01-01\",\n  end_date = \"2024-02-05\",\n  stock_codes = \"002352\",\n  metrics_list = \"y.bs.pe_ttm.t\"\n)\n#> # A tibble: 5 × 7\n#>   reportType    reportDate   currency standardDate date  stockCode y.bs.pe_ttm.t\n#>   <chr>         <chr>        <chr>    <chr>        <chr> <chr>             <dbl>\n#> 1 annual_report 2023-03-29T… CNY      2022-12-31T… 2022… 002352             40.7\n#> 2 annual_report 2022-03-31T… CNY      2021-12-31T… 2021… 002352             95.9\n#> 3 annual_report 2021-03-18T… CNY      2020-12-31T… 2020… 002352             56.8\n#> 4 annual_report 2020-03-24T… CNY      2019-12-31T… 2019… 002352             28.1\n#> 5 annual_report 2019-03-16T… CNY      2018-12-31T… 2018… 002352             34.8\n```\n:::\n\n\n## 环境配置\n\n1. 安装 R 与 RStudio。请参考[这个资料](https://bookdown.org/wangminjie/R4DS/baseR-install.html)，并了解 RStudio 基础用法。\n\n2. 验证安装。打开命令行工具，在 Windows 上是命令提示符或 PowerShell，在 macOS 或 Linux 上是终端。输入以下代码并按下回车键运行：\n\n```bash\nR --version\n``` \n\n如果 R 成功安装，这个命令会返回 R 版本信息。如果系统提示 R 不是内部或外部命令，也不是可运行程序或类似消息，那么 R 可能没有成功安装，或者 R 的安装目录没有添加到系统环境变量中。\n\n3. 安装 devtools 包。因为 lixingr 还未发布到 CRAN，所以需要通过 GitHub 安装。打开 RStudio，在 Console 中运行：\n\n```r\ninstall.packages(\"devtools\")\n```\n\n4. 安装 lixingr 包。通过 devtools 包，我们可以将托管在 GitHub 上的 lixingr 包安装到本地。\n\n```r\ndevtools::install_github('tanchangde/lixingr')\n```\n\n5. 配置理杏仁接口。注册并登录到[理杏仁](https://www.lixinger.com/)，然后从[开放平台](https://www.lixinger.com/open/api/token)获取 Token。在 Console 运行：\n\n```r\nfile.edit(\"~/.Renviron\")\n```\n\n在打开的文件中添加一行新内容：\n\n```r\nTOKEN_LIXINGER = \"已获取的 Token\"\n```\n\n保存并关闭 `.Renviron` 文件，重启 RStudio 。这样我们使用 lixingr 包时，就不用显式声明 Token，分享项目代码更安全。\n\n6. 加载包。新建一个 R 脚本文件，执行如下代码，将 lixingr 包加载到当前环境:\n\n```r\nlibrary(lixingr)\n```\n\n若未报错则成功加载，尽情玩耍吧。\n\n## 用法提示\n\nlixingr 包主函数是 `lxr_query()`，在 Console 输入 `?lxr_query` 后回车，你可以看到函数文档。\n\n为与官方接口设计保持一致，同时方便赋值 `endpoint` 参数。lixingr 包提供了 `lxr_cn` 或 `lxr_hk` 等开头的函数，返回理杏仁接口端点（API endpoint）。\n\n比如，`lxr_cn_company_fs_non_financial()`， 返回中国大陆非金融上市公司财务数据端点：\"https://open.lixinger.com/api/cn/company/fs/non_financial\"。\n\n为避在程序包文档复述接口端点参数（实为偷懒），需要你在[理杏仁接口文档](https://www.lixinger.com/open/api/)查看对应端点参数说明，再为 `lxr_query()` 提供参数。参数可用驼峰命名法，下划线命名法亦可。`lxr_query()` 会检查输入参数是否有效、必要参数是否缺失。\n\n理杏仁接口文档标识为数组的参数，需以字符向量的形式输入，函数会自行转换。\n\n比如，查询多家大陆上市公司基础信息，[文档](https://www.lixinger.com/open/api/doc?api-key=cn/company/profile)要求查询参数如下：\n\n```json\n{\n\t\"token\": \"......\",\n\t\"stockCodes\": [\n\t\t\"300750\",\n\t\t\"600519\",\n\t\t\"600157\"\n\t]\n}\n```\n\n用 lixingr 包，则需要这样写：\n\n```r\nlxr_query(\n  endpoint = lxr_cn_company_profile(),\n  stock_codes = c(\"300750\", \"600519\", \"600157\")\n)\n```\n\n## 参考资料\n\n- [Quarto](https://quarto.org/)\n- [RStudio IDE :: Cheatsheet](https://rstudio.github.io/cheatsheets/html/rstudio-ide.html)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}